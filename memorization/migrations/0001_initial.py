# Generated by Django 3.1.3 on 2020-11-16 17:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='language family')),
            ],
            options={
                'verbose_name': 'Language family',
                'verbose_name_plural': 'Language families',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('code', models.CharField(editable=False, max_length=2, primary_key=True, serialize=False, verbose_name='country code acc. ISO 639')),
                ('name', models.CharField(editable=False, max_length=28, verbose_name='language name')),
                ('family', models.ManyToManyField(related_name='_language_family_+', related_query_name='language', through='memorization.Family', to='memorization.Language', verbose_name='language family')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, verbose_name='one word')),
                ('definition', models.CharField(blank=True, max_length=300, null=True, verbose_name='one word definition')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='memorization.language', verbose_name='language of the word')),
                ('translation', models.ManyToManyField(related_name='_word_translation_+', to='memorization.Word', verbose_name='same words in another languages')),
            ],
            options={
                'verbose_name': 'Word',
                'verbose_name_plural': 'Words',
                'unique_together': {('name', 'language')},
            },
        ),
        migrations.AddField(
            model_name='family',
            name='first_language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_language', to='memorization.language', verbose_name='first language'),
        ),
        migrations.AddField(
            model_name='family',
            name='second_language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_language', to='memorization.language', verbose_name='second language'),
        ),
        migrations.CreateModel(
            name='NoteBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='date and time when entry was created')),
                ('memorization_date', models.DateTimeField(blank=True, null=True, verbose_name='date when word was memorized')),
                ('attempts', models.PositiveSmallIntegerField(default=0, verbose_name='quantity of memorization attempts')),
                ('learn_in_language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='memorization.language', verbose_name='language to learn in')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='notebook owner')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memorization.word', verbose_name='word to learn')),
            ],
            options={
                'verbose_name': 'Notebook',
                'verbose_name_plural': 'Notebooks',
                'unique_together': {('word', 'learn_in_language')},
            },
        ),
        migrations.AddConstraint(
            model_name='language',
            constraint=models.CheckConstraint(check=models.Q(code__in=('ab', 'aa', 'af', 'ak', 'sq', 'am', 'ar', 'an', 'hy', 'as', 'av', 'ae', 'ay', 'az', 'bm', 'ba', 'eu', 'be', 'bn', 'bh', 'bi', 'bs', 'br', 'bg', 'my', 'ca', 'ch', 'ce', 'ny', 'zh', 'cv', 'kw', 'co', 'cr', 'hr', 'cs', 'da', 'dv', 'nl', 'dz', 'en', 'eo', 'et', 'ee', 'fo', 'fj', 'fi', 'fr', 'ff', 'gl', 'ka', 'de', 'el', 'gn', 'gu', 'ht', 'ha', 'he', 'hz', 'hi', 'ho', 'hu', 'ia', 'id', 'ie', 'ga', 'ig', 'ik', 'io', 'is', 'it', 'iu', 'ja', 'jv', 'kl', 'kn', 'kr', 'ks', 'kk', 'km', 'ki', 'rw', 'ky', 'kv', 'kg', 'ko', 'ku', 'kj', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'gv', 'mk', 'mg', 'ms', 'ml', 'mt', 'mi', 'mr', 'mh', 'mn', 'na', 'nv', 'nb', 'nd', 'ne', 'ng', 'nn', 'no', 'ii', 'nr', 'oc', 'oj', 'cu', 'om', 'or', 'os', 'pa', 'pi', 'fa', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'sa', 'sc', 'sd', 'se', 'sm', 'sg', 'sr', 'gd', 'sn', 'si', 'sk', 'sl', 'so', 'st', 'es', 'su', 'sw', 'ss', 'sv', 'ta', 'te', 'tg', 'th', 'ti', 'bo', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'cy', 'wo', 'fy', 'xh', 'yi', 'yo', 'za', 'zu')), name='language_code_check'),
        ),
        migrations.AlterUniqueTogether(
            name='language',
            unique_together={('code', 'name')},
        ),
        migrations.AddConstraint(
            model_name='family',
            constraint=models.CheckConstraint(check=models.Q(_negated=True, first_language=django.db.models.expressions.F('second_language')), name='point_on_itself_check'),
        ),
        migrations.AlterUniqueTogether(
            name='family',
            unique_together={('first_language', 'second_language', 'name')},
        ),
        migrations.AlterIndexTogether(
            name='family',
            index_together={('first_language', 'second_language')},
        ),
    ]
